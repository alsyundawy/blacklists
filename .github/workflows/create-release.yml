name: Create Release

on:
  push:
    branches:
      - main
    paths:
      - 'all.fqdn.blacklist.tar.gz'
  workflow_dispatch:

jobs:
  Create-release:
    runs-on: ubuntu-latest

    steps:
    - run: git config --global user.email "fabrizio.salmi@gmail.com"
    - run: git config --global user.name "fabriziosalmi"

    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1  # Get all commits
        ref: main
        token: ${{ secrets.PAT }}

    # Extract current blacklist
    - name: Extract current blacklist.txt
      run: |
        mkdir current
        git checkout $(echo "${{ steps.find_commits.outputs.commits }}" | awk '{print $1}')
        tar -xzf all.fqdn.blacklist.tar.gz -C current
        mv current/all.fqdn.blacklist current/blacklist.txt

    - name: Delete Release if Exists
      run: |
        release_id=$(curl -H "Authorization: token ${{ secrets.PAT }}" -s "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/latest" | jq .id)
        if [ "$release_id" != "null" ]; then
          curl -X DELETE -H "Authorization: token ${{ secrets.PAT }}" "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/$release_id"
        fi

    - name: Delete Tag if Exists
      run: |
        if git show-ref --tags latest; then
          git push --delete origin latest
        fi

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: latest
        release_name: "Domains Blacklist"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}

    - name: Upload Release Asset (Blacklist)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./current/blacklist.txt
        asset_name: blacklist.txt
        asset_content_type: text/plain
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}

    - name: Clean up
      run: |
        rm -r current
