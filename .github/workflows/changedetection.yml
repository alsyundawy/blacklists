name: Blacklists Monitor

on:
  schedule:
    - cron: '0 2,6,10,14,18,22 * * *'
  workflow_dispatch:

jobs:
  check-blacklists:
    runs-on: ubuntu-latest

    steps:
    - name: Setup Git Configurations
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "github-actions[bot]"

    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1  # Fetch all history for completeness
        ref: main
        token: ${{ secrets.PAT }}

    - name: Fetch recent blacklist changes
      env:
        DB_UA: ${{ secrets.DB_UA }}
        CD_API_KEY: ${{ secrets.CD_API_KEY }}
        CD_API_URL: ${{ secrets.CD_API_URL }}
        
      run: |
        # Make an API call to fetch the data with the specified headers
        curl $CD_API_URL/api/v1/watch -H "user-agent:$DB_UA" -H "x-api-key:$CD_API_KEY" > data.json
    
        current_time=$(date +%s)
        day_in_seconds=86400
    
        cat data.json | jq --argjson current_time "$current_time" --argjson day_in_seconds "$day_in_seconds" 'to_entries | map(select((.value.last_changed > 0) and (($current_time - .value.last_changed) <= $day_in_seconds))) | .[].value.url' | sed "s/\"//g" > updated.blacklists.urls
   
    - name: Commit and push if there are changes
      run: |
        git config user.name "GitHub Action"
        git config user.email "action@github.com"
        
        git add updated.blacklists.urls
        git commit -m "1d max freshness blacklists list updated." || echo "No changes to commit"
        git pull --rebase origin main
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
